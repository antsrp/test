basePath: /api/v1
definitions:
  models.AddBalanceRequest:
    properties:
      balance:
        example: 200
        type: integer
      comment:
        example: some description of comment
        type: string
      time:
        example: "2020-03-21T12:00:00Z"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  models.ReserveRequest:
    properties:
      comment:
        example: some description of comment
        type: string
      cost:
        example: 100
        type: integer
      order_id:
        example: 1
        type: integer
      service_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  models.RevenueRequest:
    properties:
      closed_at:
        example: "2020-03-21T12:00:00Z"
        type: string
      cost:
        example: 100
        type: integer
      order_id:
        example: 1
        type: integer
      service_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  service.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: User balance service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User balance
  version: "1.0"
paths:
  /add-balance:
    post:
      consumes:
      - application/json
      description: Add balance of user by the amount of "balance" parameter
      parameters:
      - description: information of operation to add balance
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AddBalanceRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Add user balance
      tags:
      - Routes
  /get-balance:
    get:
      description: Get user balance by id
      parameters:
      - description: id of user
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Get user balance
      tags:
      - Routes
  /get-revenue:
    put:
      consumes:
      - application/json
      description: Get revenue of operation that started before
      parameters:
      - description: information of operation to get revenue of
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RevenueRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Get revenue of operation
      tags:
      - Routes
  /operations:
    get:
      description: Show operations of interest to him
      parameters:
      - description: id of user
        in: query
        name: user_id
        required: true
        type: integer
      - description: page of operation's report; if not specified, operations are
          returned all together
        in: query
        name: page
        type: integer
      - description: date, sum
        in: query
        name: sort
        type: string
      - description: ASC, DESC
        in: query
        name: direction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Get operations of user
      tags:
      - Routes
  /reserve:
    post:
      consumes:
      - application/json
      description: Reserve cash for the subsequent operation
      parameters:
      - description: information of operation reserve
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ReserveRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Reserve cash for operation
      tags:
      - Routes
  /summary:
    get:
      description: Get summary of revenue grouped by services
      parameters:
      - description: year to collect the report
        in: query
        name: year
        required: true
        type: integer
      - description: month to collect the report
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.Response'
      summary: Get summary
      tags:
      - Routes
swagger: "2.0"
